name: Dockerless_build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
    - 'docker_build'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 10

      - name: Set up Ruby 2.6
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6
      
      - name: Install depencies
        run: |
          sudo apt update
          sudo apt install bc bison ccache gcc-arm-linux-gnueabihf fakeroot flex git kmod libelf-dev libssl-dev make python3-pip
          gem install --no-document fpm
          pip3 install --upgrade cloudsmith-cli
                
      - name: Setup env
        run: |
          ccache --set-config=compiler_check=content && ccache --set-config=hash_dir=false
          echo "DT=$(date +'%Y-%m-%d_%H%M')" >> $GITHUB_ENV
          echo "KERNELVER=$(make kernelversion)" >> $GITHUB_ENV
          echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV
      - name: Print env
        run: |
          echo $BRANCH $KERNELVER $DT
          
      - name: Setup cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache
          restore-keys: |
            ${{ runner.os }}-ccache
            ${{ runner.os }}-ccache-
      - name: Build
        run: |
          export PATH=/usr/lib/ccache:$PATH
          bash build.sh pi buster
     
